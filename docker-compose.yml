version: '3.8'

services:
  frontend:
    build:
      context: ./frontend-svelte
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=/api
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - upload_temp:/app/upload_temp
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DOMAIN:-localhost,127.0.0.1,backend,frontend,nginx}
      - DB_NAME=${DB_NAME:-stock_db}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-admin123}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FILE_UPLOAD_MAX_MEMORY_SIZE=5242880
      - FILE_UPLOAD_TEMP_DIR=/app/upload_temp
      # SMTP Configuration
      - EMAIL_HOST=172.17.0.1
      - EMAIL_PORT=25
      - EMAIL_USE_SSL=False
      - EMAIL_USE_TLS=False
      - DEFAULT_FROM_EMAIL=catalogmanagementsystem-u23037.vm.elestio.app@vm.elestio.app
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: celery
    command: -A stock_management worker -l info
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - upload_temp:/app/upload_temp
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME:-stock_db}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-admin123}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      # SMTP Configuration
      - EMAIL_HOST=172.17.0.1
      - EMAIL_PORT=25
      - EMAIL_USE_SSL=False
      - EMAIL_USE_TLS=False
      - DEFAULT_FROM_EMAIL=catalogmanagementsystem-u23037.vm.elestio.app@vm.elestio.app
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${DB_NAME:-stock_db}
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-admin123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-stock_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "3002:80"  # External port 3002 maps to internal port 80
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - upload_temp:/var/www/upload_temp
    depends_on:
      - backend
      - frontend
    environment:
      - NGINX_MAX_UPLOAD=100M
      - NGINX_CLIENT_MAX_BODY_SIZE=100M
      - NGINX_SSL=${NGINX_SSL:-true}
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  upload_temp:
